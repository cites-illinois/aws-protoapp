'''
Django settings for protoapp project.

Generated by 'django-admin startproject' using Django 1.9.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
'''

from __future__ import print_function

import os

from pkg_resources import resource_filename

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6ukk4a9hdxluwq1_4zm!20e#z-eod-r1go2wnrgx96jswu^!)h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'protoapp',
]

#   NOTE:   For standalone application itself, we just use Django's
#           default caching. We should use something real when we
#           deploy the application elsewhere.

#SESSION_ENGINE="django.contrib.sessions.backends.cached_db"

#CACHES = {
#   'default': {
##      'BACKEND':  'django.core.cache.backends.memcached.MemcachedCache',
#       'BACKEND':  'django.contrib.sessions.backends.cache',
##      'LOCATION': 'unix:/tmp/memcached.sock',
#       'LOCATION': '127.0.0.1:11211',
#       'TIMEOUT':  300,
#   }
#}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': 
        [ 'rest_framework.permissions.IsAuthenticatedOrReadOnly' ],
    'PAGE_SIZE': 20,
}

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'protoapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
    #   'DIRS': [ resource_filename('protoapp', 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'protoapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
}

#DATABASES = {
#   'default': {
#       'ENGINE': 'django.db.backends.postgresql_psycopg2',
#       'NAME': 'protoapp',
#       'USER': 'postgres',
#       'HOST': '',
#       'PORT': '',
#   }
#}

# Database on AWS RDS PostgreSQL.

#DATABASES = {
#   'default': {
#       'ENGINE': 'django.db.backends.postgresql_psycopg2',
#       'NAME': 'protoapp',
#       'USER': 'protoapp',
#       'PASSWORD': '********',
#       'HOST': 'some_famously_long_AWS_hostname',
#       'PORT': '5432',
#   }
#}

# Database on AWS RDS Oracle.

#DATABASES = {
#   'default': {
#       'ENGINE': 'django.db.backends.oracle',
#       'NAME': 'ORACLE',
#       'USER': 'protoapp',
#       'PASSWORD': '********',
#       'HOST': 'some_famously_long_AWS_hostname',
#       'PORT': '1521',
#   }
#}



# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
    'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
    'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
    'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
    'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'

# Directories not tied to an application to be searched for static files.
#STATICFILES_DIRS = [ os.path.join(BASE_DIR, 'static') ]

# Specify directory from which static files will be served.

STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, '..', 'static'))
